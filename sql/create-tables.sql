-- ------------------------------------------------------------------
-- Project:	ERP-Coin
-- Version Number:	1.0.0 / 2018

-- Company:	EPI-USE

-- Author/s:       Kyle Pretorius
--                 Ulrik de Muelenaere
--                 Tristan Rothman
--                 Sewis van Wyk
--                 Richard Dixie
--                 Darius Scheepers

-- SQL version: MySQL

-- Purpose Statement: Create the whole bulk of the database structure, without
-- any data.
-- ------------------------------------------------------------------

-- Database Administrator: Darius Scheepers

-- Naming conventions:
--    object names have a prefix that is one of following acronyms followed by
--    the object's identifier
-- Acronyms:
-- db = database
-- tbl = table
-- adm = admin user
-- con = conservation area
-- hnc = hotspot node coordinate
-- usr = user
-- ale = alert
-- veh = vehicle
-- cup = conservation area user points

-- MySQL Script generated by MySQL Workbench
-- Mon 07 May 2018 11:12:18 SAST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema dbERPCOIN
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dbERPCOIN` DEFAULT CHARACTER SET latin1 ;
USE `dbERPCOIN` ;

-- -----------------------------------------------------
-- Table `dbERPCOIN`.`tblAdminUser`
-- -----------------------------------------------------
-- Description: Stores basic information of an administrator.
-- admSuperAdmin: flag to indicate this is a super user.
CREATE TABLE IF NOT EXISTS `dbERPCOIN`.`tblAdminUser` (
  `admID` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `admUsername` VARCHAR(50) NOT NULL,
  `admEmailAddress` VARCHAR(100) NOT NULL,
  `admPassword` VARCHAR(60) NOT NULL,
  `admName` VARCHAR(40) NOT NULL,
  `admSurname` VARCHAR(40) NOT NULL,
  `tblConservationArea_conID` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`admID`, `tblConservationArea_conID`),
  INDEX `fk_tblAdminUser_tblConservationArea1_idx` (`tblConservationArea_conID` ASC),
  CONSTRAINT `fk_tblAdminUser_tblConservationArea1`
    FOREIGN KEY (`tblConservationArea_conID`)
    REFERENCES `dbERPCOIN`.`tblConservationArea` (`conID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

-- -----------------------------------------------------
-- Table `dbERPCOIN`.`tblSuperAdmin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbERPCOIN`.`tblSuperAdminUser` (
	`sadID` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
    `sadUsername` VARCHAR(50) NOT NULL,
	`sadEmailAddress` VARCHAR(100) NOT NULL,
	`sadPassword` VARCHAR(60) NOT NULL,
	`sadName` VARCHAR(40) NOT NULL,
	`sadSurname` VARCHAR(40) NOT NULL,
	PRIMARY KEY(`sadID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

-- -----------------------------------------------------
-- Table `dbERPCOIN`.`tblConservationArea`
-- -----------------------------------------------------
-- Description: Stores informtion about a ERP conservation area
-- conBorderNodeJSONObject: Stores a JSON object containing a list of the nodes
-- of the conservation area's border
-- conMiddlePointCoordinate: Stores the longitude and latitude of of the middle
-- point of the conservation area. This is also a JSON object.
CREATE TABLE IF NOT EXISTS `dbERPCOIN`.`tblConservationArea` (
  `conID` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `conName` VARCHAR(100) NOT NULL,
  `conBorderNodeJSONObject` VARCHAR(30000) NOT NULL,
  `conMiddlePointCoordinate` VARCHAR(100) NOT NULL,
  `conCity` VARCHAR(30) NOT NULL,
  `conProvince` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`conID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

-- -----------------------------------------------------
-- Table `dbERPCOIN`.`tblUser`
-- -----------------------------------------------------
-- Description: Stores basic informtion about an user.
-- usrWalletAddress: The address of the user's blockchain wallet.
-- usrLastPointTime: The time when the user previously sent his coordinate
CREATE TABLE IF NOT EXISTS `dbERPCOIN`.`tblUser` (
  `usrID` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `usrUsername` VARCHAR(50) NOT NULL,
  `usrEmailAddress` VARCHAR(100) NOT NULL,
  `usrPassword` VARCHAR(60) NOT NULL,
  `usrName` VARCHAR(40) NOT NULL,
  `usrSurname` VARCHAR(40) NOT NULL,
  `usrWalletAddress` varchar(50) NULL,
  `usrUnclaimedBalance` INT UNSIGNED NOT NULL,
  `usrLastPointTime` BIGINT NOT NULL,
  PRIMARY KEY (`usrID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

-- -----------------------------------------------------
-- Table `dbERPCOIN`.`tblAlert`
-- -----------------------------------------------------
-- Description: Stores informtion about an alert that is sent by an user.
CREATE TABLE IF NOT EXISTS `dbERPCOIN`.`tblAlert` (
	`aleID` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	`aleHeader` VARCHAR(30) NOT NULL,
  `aleDescription` VARCHAR(300) NOT NULL,
  `aleSeverity` INT(10) UNSIGNED NOT NULL,
  `aleImage` mediumblob ,
  `aleBroadcast` BIT(1) NOT NULL,
  `aleLocation` VARCHAR(100) NOT NULL,
  `aleTimeSent`  BIGINT NOT NULL,
  `tblConservationArea_conID` INT(10) UNSIGNED NOT NULL,
  `tblUser_usrID` INT(10) UNSIGNED,
  PRIMARY KEY (`aleID`),
  INDEX `fk_tblAlert_tblConservationArea1_idx` (`tblConservationArea_conID` ASC),
  CONSTRAINT `fk_tblAlert_tblConservationArea1`
    FOREIGN KEY (`tblConservationArea_conID`)
    REFERENCES `dbERPCOIN`.`tblConservationArea` (`conID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  INDEX `fk_tblAlert_tblUser1_idx` (`tblUser_usrID` ASC),
  CONSTRAINT `fk_tblAlert_tblUser1`
    FOREIGN KEY (`tblUser_usrID`)
    REFERENCES `dbERPCOIN`.`tblUser` (`usrID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

-- -----------------------------------------------------
-- Table `dbERPCOIN`.`tblConservationAreaUserPoints`
-- -----------------------------------------------------
-- Description: Stores informtion about locations users have visited at a
-- conservation area.
CREATE TABLE IF NOT EXISTS `dbERPCOIN`.`tblConservationAreaUserPoints` (
	`cupID` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	`cupDateTime` BIGINT NOT NULL,
  `cupLocationLatitude` VARCHAR(50) NOT NULL,
  `cupLocationLongitude` VARCHAR(50) NOT NULL,
  `tblConservationArea_conID` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`cupID`, `tblConservationArea_conID`),
  INDEX `fk_tblConservationAreaUserPoints_tblConservationArea1_idx` (`tblConservationArea_conID` ASC),
  CONSTRAINT `fk_tblConservationAreaUserPoints_tblConservationArea1`
    FOREIGN KEY (`tblConservationArea_conID`)
    REFERENCES `dbERPCOIN`.`tblConservationArea` (`conID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

-- -----------------------------------------------------
-- Table `dbERPCOIN`.`tblConservationAdminStock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbERPCOIN`.`tblConservationAdminStock` (
	`casID` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
    `casName` VARCHAR(50) NOT NULL,
    `casRandValue` INT(10) UNSIGNED NOT NULL,
    `casCoinValue` INT(10) UNSIGNED NOT NULL,
    `casDescription` VARCHAR(255) NOT NULL,
    `casImage` mediumblob,
    `casVerified` BIT(1) NOT NULL,
    `casStockAmount` INT(10) NOT NULL,
    `tblConservationArea_conID` INT(10) UNSIGNED NOT NULL,
	PRIMARY KEY (`casID`, `tblConservationArea_conID`),
	INDEX `fk_tblConservationAdminStock_tblConservationArea1_idx` (`tblConservationArea_conID` ASC),
	CONSTRAINT `fk_tblConservationAdminStock_tblConservationArea1`
	FOREIGN KEY (`tblConservationArea_conID`)
	REFERENCES `dbERPCOIN`.`tblConservationArea` (`conID`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

-- -----------------------------------------------------
-- Table `dbERPCOIN`.`tblLastRewardPurchase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbERPCOIN`.`tblLastRewardPurchase` (
	`lrpBlockNumber` INT(10) UNSIGNED NOT NULL,
	`lrpLogIndex` INT(10) UNSIGNED NOT NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

INSERT INTO `dbERPCOIN`.`tblLastRewardPurchase`
SELECT 0, 0
WHERE NOT EXISTS (SELECT * FROM `dbERPCOIN`.`tblLastRewardPurchase`);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
